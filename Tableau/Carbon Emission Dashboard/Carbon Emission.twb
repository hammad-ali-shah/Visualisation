<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='co2_emissions_kt_by_country' inline='true' name='federated.08p5cc313o4ifl1auckkm119gr7m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='co2_emissions_kt_by_country' name='textscan.1nlgszj0j7htqo183h7u400su101'>
            <connection class='textscan' directory='C:/Users/Shah/Downloads/Compressed/Co2 Emissions' filename='co2_emissions_kt_by_country.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1nlgszj0j7htqo183h7u400su101' name='co2_emissions_kt_by_country.csv' table='[co2_emissions_kt_by_country#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_code' ordinal='0' />
            <column datatype='string' name='country_name' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='value' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[co2_emissions_kt_by_country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[co2_emissions_kt_by_country.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[co2_emissions_kt_by_country.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[co2_emissions_kt_by_country.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[co2_emissions_kt_by_country.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.08p5cc313o4ifl1auckkm119gr7m].[cnt:country_name:qk]&quot;' value='Asia' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Value (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='5' formula='[value]' peg='0' size='617643' />
      </column>
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country_name]' derivation='Count' name='[cnt:country_name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country_name]' derivation='Max' name='[max:country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.495851' measure-ordering='alphabetic' measure-percentage='0.504149' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa Eastern and Southern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa Western and Central&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Korea, Dem. People&apos;s Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa Eastern and Southern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa Western and Central&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Korea, Dem. People&apos;s Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Max Suicide' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Global Index' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Pak By Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Asia'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emissions_kt_by_country' name='federated.08p5cc313o4ifl1auckkm119gr7m' />
          </datasources>
          <datasource-dependencies datasource='federated.08p5cc313o4ifl1auckkm119gr7m'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='Max' name='[max:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[max:country_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='15'>&lt;</run>
                <run fontsize='15'>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</run>
                <run fontsize='15'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.08p5cc313o4ifl1auckkm119gr7m].[max:country_name:nk]</cols>
      </table>
      <simple-id uuid='{57EF9501-C402-46F3-89FC-DA884619F2D3}' />
    </worksheet>
    <worksheet name='Economic Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Index by Economic Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emissions_kt_by_country' name='federated.08p5cc313o4ifl1auckkm119gr7m' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08p5cc313o4ifl1auckkm119gr7m'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;High income&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low income&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' value='36' />
            <format attr='height' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]' value='34' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</rows>
        <cols>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{42B124E1-E1DD-411D-9CBF-D49122ADE4D1}' />
    </worksheet>
    <worksheet name='Europe'>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emissions_kt_by_country' name='federated.08p5cc313o4ifl1auckkm119gr7m' />
          </datasources>
          <datasource-dependencies datasource='federated.08p5cc313o4ifl1auckkm119gr7m'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='15'>&lt;</run>
                <run fontsize='15'>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</run>
                <run fontsize='15'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</cols>
      </table>
      <simple-id uuid='{F8EB88F9-28F2-42DE-99E7-9D0B7C759598}' />
    </worksheet>
    <worksheet name='Global Index'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Global Emission Yearly</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emissions_kt_by_country' name='federated.08p5cc313o4ifl1auckkm119gr7m' />
          </datasources>
          <datasource-dependencies datasource='federated.08p5cc313o4ifl1auckkm119gr7m'>
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</rows>
        <cols>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{32D8DFB9-78B7-4F38-AA6C-AD6A241DC23F}' />
    </worksheet>
    <worksheet name='Max Suicide'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Max Co2 Emission </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emissions_kt_by_country' name='federated.08p5cc313o4ifl1auckkm119gr7m' />
          </datasources>
          <datasource-dependencies datasource='federated.08p5cc313o4ifl1auckkm119gr7m'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[value]' derivation='Max' name='[max:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Africa Eastern and Southern&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Andorra&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Antigua and Barbuda&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Aruba&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Barbados&quot;' />
                <groupfilter from='&quot;Belize&quot;' function='range' level='[none:country_name:nk]' to='&quot;Bermuda&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Botswana&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;British Virgin Islands&quot;' />
                <groupfilter from='&quot;Burkina Faso&quot;' function='range' level='[none:country_name:nk]' to='&quot;Cabo Verde&quot;' />
                <groupfilter from='&quot;Cayman Islands&quot;' function='range' level='[none:country_name:nk]' to='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;China&quot;' />
                <groupfilter from='&quot;Comoros&quot;' function='range' level='[none:country_name:nk]' to='&quot;Congo, Rep.&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Curacao&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Djibouti&quot;' />
                <groupfilter from='&quot;Early-demographic dividend&quot;' function='range' level='[none:country_name:nk]' to='&quot;Ecuador&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;El Salvador&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Eritrea&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Eswatini&quot;' />
                <groupfilter from='&quot;Euro area&quot;' function='range' level='[none:country_name:nk]' to='&quot;Faroe Islands&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                <groupfilter from='&quot;French Polynesia&quot;' function='range' level='[none:country_name:nk]' to='&quot;Gambia, The&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Gibraltar&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Grenada&quot;' />
                <groupfilter from='&quot;Guinea-Bissau&quot;' function='range' level='[none:country_name:nk]' to='&quot;Honduras&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter from='&quot;IDA &amp; IBRD total&quot;' function='range' level='[none:country_name:nk]' to='&quot;IDA total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Kiribati&quot;' />
                <groupfilter from='&quot;Lao PDR&quot;' function='range' level='[none:country_name:nk]' to='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lesotho&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Liechtenstein&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter from='&quot;Macao SAR, China&quot;' function='range' level='[none:country_name:nk]' to='&quot;Malawi&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Mali&quot;' />
                <groupfilter from='&quot;Marshall Islands&quot;' function='range' level='[none:country_name:nk]' to='&quot;Mauritius&quot;' />
                <groupfilter from='&quot;Micronesia, Fed. Sts.&quot;' function='range' level='[none:country_name:nk]' to='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Mozambique&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Namibia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Nauru&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;New Caledonia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Nicaragua&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter from='&quot;Rwanda&quot;' function='range' level='[none:country_name:nk]' to='&quot;Sao Tome and Principe&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Senegal&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Seychelles&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sierra Leone&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Small states&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Solomon Islands&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter from='&quot;St. Kitts and Nevis&quot;' function='range' level='[none:country_name:nk]' to='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Suriname&quot;' />
                <groupfilter from='&quot;Timor-Leste&quot;' function='range' level='[none:country_name:nk]' to='&quot;Trinidad and Tobago&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Tuvalu&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Vanuatu&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.08p5cc313o4ifl1auckkm119gr7m].[max:value:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[max:value:qk]' value='37' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]' value='17' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]' value='64' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</rows>
        <cols>[federated.08p5cc313o4ifl1auckkm119gr7m].[max:value:qk]</cols>
      </table>
      <simple-id uuid='{9CA49884-F6E6-45B7-99A5-AFA363896972}' />
    </worksheet>
    <worksheet name='Max Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Global Yearly Emission</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emissions_kt_by_country' name='federated.08p5cc313o4ifl1auckkm119gr7m' />
          </datasources>
          <datasource-dependencies datasource='federated.08p5cc313o4ifl1auckkm119gr7m'>
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</rows>
        <cols>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{B04A8CCE-35A1-4948-9E7E-BDBD428FA88E}' />
    </worksheet>
    <worksheet name='North America'>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emissions_kt_by_country' name='federated.08p5cc313o4ifl1auckkm119gr7m' />
          </datasources>
          <datasource-dependencies datasource='federated.08p5cc313o4ifl1auckkm119gr7m'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='15'>&lt;</run>
                <run fontsize='15'>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</run>
                <run fontsize='15'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</cols>
      </table>
      <simple-id uuid='{F9F7CA10-E452-4E8A-93AE-290451BCB268}' />
    </worksheet>
    <worksheet name='Pak By Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Pakistan Ratio by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emissions_kt_by_country' name='federated.08p5cc313o4ifl1auckkm119gr7m' />
          </datasources>
          <datasource-dependencies datasource='federated.08p5cc313o4ifl1auckkm119gr7m'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pakistan&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' value='24' />
            <format attr='height' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]' value='33' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</rows>
        <cols>([federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk] * [federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk])</cols>
      </table>
      <simple-id uuid='{98C389A3-D82A-40BC-9BDA-8A41619308ED}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='76625' id='3' is-centered='0' is-scaled='1' param='C:/Users/Shah/Downloads/Dashboard bg (1).png' type='bitmap' w='99100' x='800' y='250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='22750' id='5' name='Global Index' w='53200' x='16700' y='20875' />
        <zone h='49625' id='6' name='Max Suicide' w='25600' x='71900' y='21125' />
        <zone h='24250' id='9' name='Economic Income' w='25300' x='16600' y='46625' />
        <zone h='24375' id='11' name='Pak By Year' w='25700' x='44000' y='46750' />
        <zone h='10750' id='23' name='Asia' w='25300' x='16600' y='7375' />
        <zone h='11000' id='24' name='Europe' w='25400' x='44300' y='7125' />
        <zone h='10875' id='29' name='North America' w='25400' x='72100' y='7250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='35' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' forceUpdate='true' h='76625' id='3' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Shah/Downloads/Dashboard bg (1).png' type='bitmap' w='99100' x='800' y='250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='88' h='11000' id='24' is-fixed='true' name='Europe' w='25400' x='44300' y='7125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='10875' id='29' is-fixed='true' name='North America' w='25400' x='72100' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='86' h='10750' id='23' is-fixed='true' name='Asia' w='25300' x='16600' y='7375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='182' h='22750' id='5' is-fixed='true' name='Global Index' w='53200' x='16700' y='20875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49625' id='6' is-fixed='true' name='Max Suicide' w='25600' x='71900' y='21125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='194' h='24250' id='9' is-fixed='true' name='Economic Income' w='25300' x='16600' y='46625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='195' h='24375' id='11' is-fixed='true' name='Pak By Year' w='25700' x='44000' y='46750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{71F7ED0B-2CB2-40CB-84FD-C6E9230999DD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Max Suicide'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;El Salvador&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_code:nk]</field>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</field>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E87030ED-7395-48B2-B3BC-19625089B7BF}' />
    </window>
    <window class='worksheet' name='Pak By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</field>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6078044-AE5C-4203-9A70-DBA9D3A54C56}' />
    </window>
    <window class='worksheet' name='Max Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:Value (bin):qk]</field>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CE6DC9A-4322-4052-A7EC-4A7C3BBD7C5A}' />
    </window>
    <window class='worksheet' name='Economic Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]</field>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A99C30B5-B0C3-4C63-8F45-3142F781056C}' />
    </window>
    <window class='worksheet' name='Global Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1CE8E4B-FEA4-4575-B698-D03BFC560E7B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Asia'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Economic Income'>
          <zoom type='entire-view' />
          <highlight field='[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Europe'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Index'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Max Suicide' />
        <viewpoint name='North America'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pak By Year'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</field>
                      <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</field>
                    <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:year:qk]</field>
                    <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[sum:value:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Pakistan&quot;</value>
                  <value>1985</value>
                  <value>47175.955000000002</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{9EDE7CE5-E0CB-41AF-85A4-E5C3BD76D746}' />
    </window>
    <window class='worksheet' name='Europe'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{706A25BE-2B9B-446B-8148-A1E24F86FF12}' />
    </window>
    <window class='worksheet' name='Asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[max:country_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Zimbabwe&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC09878D-0F03-4D5E-A545-99DA8D967C38}' />
    </window>
    <window class='worksheet' name='North America'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.08p5cc313o4ifl1auckkm119gr7m].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0229DEC5-35E5-4D38-B81E-82E51427A7D4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Asia' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAE1ElEQVR4nO3Y208cZRzG8WfpHmAXdhdKOaUqQokxRkO1pjVpYmuqTWOMV73S/9SYamMs
      iiItW866nEphKaelnHZ3ZrwwEjcleKFxa57v527m/b2T9+ab2dlYFEWRAFNNjT4A0EgEAGvx
      v16M/LaqIAwbdRbgP1cXwGFzmwK+CGCEn0CwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwFm/0AeArDEMVCw81M/aDPrr7pZozrTrYK+vx
      yHcKalVdu/N53fzc+E8qLS8q1ZJW38Al9fYPqjj5SNOjI7px9wulW9u0WpzXwmRBsaaYOnsv
      amj4vZP95a1NFR7cVyab0zvXb2r+4c+8AdA4Qa2qju5eZTs6FYahJOn48EBvXbuuo/3ndbNR
      FGlno6TLNz7WlVt31DcwpCAIlO/sUv5Cl8IgkCTNjo3q6u1PdfX2Z1qcmqh7RrVyrDff/0CH
      z/cUi8U0NHyFANA4iWRK7d09dffau3oUTyZPne99fVCplrTWFotamZtRPJFQR09f3cz5nj4V
      JydUWl5UOpt7Ye1cPFF3jwDwvxCLxXTx0hs6F4+r65XXNDP24wszYRCo9GRJg29fVver/To6
      2FdQq535XAJAwxwfHmphqqDt9TUtz06pvLWpZ6srWpqZ1PbGupZmp1SrVjV27yuFQaDx+1/r
      14lxFb7/Vr39A6ocH2lhqqCt9adamZvW3s6Wsh2dmhp9oNlfRpVMNSvW1KSxb/7Yv760oJX5
      aW2trWq7tKYoDBWLoij680D3VvcURGcdGfj3VCsV7ZTWTq5b8+2qVSs62t+XJMWamhSGoZ7M
      z2j4w1uqVSra3dxQPJlU7vwFBbWattefnuzP5PJqzrRq91lJYRgq39ml3c0NFR8/0rs3P1F5
      c0OVoyNJUktbVplsjgDwctvf3VEqnVE8kfj74VMclMtKNKeUSKZOXedvULzUMrn8P9qfzmbP
      XOcbANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYI
      ANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANYIANZ+B56H
      FCFPJCJ+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      0Q6QAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Economic Income' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Europe' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEeklEQVR4nO3XPUtzSRyG8fssiYkJIRiMRAQFU6SysBAfrH1BLMTW0o9mYWVpI4gkoqUi
      gtgYUDHGiCbxaKJoyNliQfbZrbZS9r5+3cAMzCmuw3+CKIoiAab++O4LAN+JAGAt9vfF09OT
      mIjgJOANAGeMQLBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALAW++4LAP/0/v6ucrmsu7s7bWxsqN/vq1KpqN1u6+PjQ6urq0omk4qiSDs7
      O4rFYlpeXv4632w2tb29rUKhoKGhIc3OzqpcLqvb7arb7Wpubk6vr686OTkhAPw8Ly8v+vXr
      l7a3tyVJ9XpdnU5Ha2truri40OHhoebn53VxcaFEIqG3t7ffztdqNc3MzGh6elqSFEWRFhYW
      FASBHh8fValUlMlktLi4yAiEnyefzyudTn+tBwcHFYahrq6uFIahbm9vdX19rVqtptnZ2X+d
      z2azmpycVBiGOjg4UL/fVxAE6nQ62tra0tTUlCYmJpTL5QgAP18ul9PKyoparZbi8bgKhYLO
      z88VhqF2d3d1enqqarX6tX98fFzZbFaZTEb1el2vr6+SpHQ6rY2NDR0fH6tUKmlgYIARCD9P
      o9FQrVbT/f29zs7OVCwWVa1WFQSBLi8vtbS0pGw2K+mvcSmRSKhYLOro6EilUkk3Nzd6e3tT
      PB7/+vvv7e1peHhYzWZTY2Nj2t/fVyaTURBFUfTN3wv85vn5Wa1WS5IUBIFGR0fV6XQUhqHy
      +bxSqdTX3n6/r263q1Qqpc3NTa2vrysWi6nRaKjX66lQKCgWiykMQ7XbbSWTSY2MjOjz81MP
      Dw8EgP+HXq+nMAyVy+X+0zkCgDUewbBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALD2J7Rs/qRnR0QRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Global Index' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASaUlEQVR4nO3d6VNbV5rH8e+9khBgFrHvxgu28e7gTpy4M66Z7p7qP3feT9V01fR0Ou3Y
      bmPjDYNtAUIgoX3X3c68uAibTpxgECA4z6cqZUNsPVf4/O49Ojp6rqGUUgihKfO4D0CI4yQB
      EFpragBc123K4ziO05THkZp61lRK7blmUwPgeV5LPY7UlJq/RaZAQmsSAKE1CYDQmgRAaE0C
      ILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCa7sC4NVL
      PP7HD/w0/xrLrvPi8Y8sLK3h2hXmf/o7r6ObVNLrvHwfB2Bl8RnxbPVYDlyIZth9BTBD3Jj7
      mk6vRHLlLcbINQLZTVbjK0Smb6DSa6TTNTZTMRyvzlpslXy+fkyHLsTBBT/9wgyFWVv4iawV
      ZMDz6Onroa3QRsLyGB3ooq27jZINE0OdvF/8QPf4FOB//tJ1XTzPw7KsAx+U67pNeRypKTV/
      y64AVPIp7EAXITuHe2aE6LPHuK7LjSujLL96imN7XBoBp3+UFw/nmbs5TaoOpmlimia2bRMK
      hQ588JZl0dbWduDHkZp61mz0ettLzV0BaO/qZWRYMToxRV9PF71nItDWRVdHiFCom0BnNx0m
      qGCAvu9/TzgcpNeT19Hi5No9BQqEGBgc2vm6OzKw8/ve/oFP/yjBzg4AAoHDPDwhDpecvoXW
      JABCaxIAoTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBa
      kwAIrUkAhNYkAEJrEgChNQmA0NruACiPD6/nmX/9HsdxeP74b/zw03Mcz2bx+RNWEnnqhS2i
      8QwAybV3pIpH2+9FiGbaFQCnWiA8dJ4uVWIrlyDQeZZ7d6+TXX+P2TdN9sNrUok8S7FlXOXw
      dnGBrXTluI5diAPb1RYl2BmhvbBKIdxDpD3Iy9U3pLJbXJxop3dogK7aOsW6wVgkTCy6Ssew
      dIaTmie75q4AOMU4b+MVZqZHcB2HK3duklp+S93sJRuLUsvUmBzqwh0Y5dXjF9y+PkXGks5w
      UrO1an5JZ7hdUyAVOENP2GYjnoD2LpxCmv6LV7kweY7eoM3ZqzcYHBtlqKefua/u0D84ydTw
      mcN5FkIcAUM14tIEcgWQmq1QUymFbdtffgUQQjcSAKE1CYDQmgRAaE0CILQmARBakwAIrUkA
      hNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBo7Wed4bbi
      q6zGk3ieR3J9hWS2iPJcNtaipAoV7GqRVK4EQCGTpFRzjuO4hWiKn3WGy1ZdMhtrbK4v836z
      wtKLlyQTUTbzdZYXFkivb/B48TVKeTx/8ldWNkvHdexCHNjPOsOND9hELYtgrc7k7E3aVp6x
      Waoxcf4abvw5hVqAse4AG5sx2vrPYiKd4aTmya25KwBeNU10s8LslctYW0ssJ9OoQo3IeC/F
      fI5ytkp/Xxft/aO8nl/k6pVx8o50hpOarVXzSzrD7QqAbXvkklF+SMS59c1XtCcWYOICZ8d7
      efVsnu6pWQY7wOvqwJi5RP9AN+12++E8CyEOm1LSGU5qnr6ae+oM59iQ2dp9BRDiVFNqZ+CT
      TYHrSgDEKdcY9NUKFHNQyIPngmlCICABEKeTUatALuUP+loNUGCYYBgQCOz8OQmAOF2sOmys
      Echn/IFuBnYN+H8lARCng1JQKUHsA7guKhD81YHfIAEQJ5/nQSoBiXUIBv1pzh4XNyUA4mRz
      bIhFoVT44sEPEgBxEikFrgv5DCTj/tfB/Q1lCYA4WRwb0knIpcG2t1/o7n9XvwRANI9SgPJ/
      VQoUoDwMzz3YYyrPX91JJ/2zvsIf9Ps8639KAiAORimwLchnobj9JpPy/F89BZ5HwDChuwf6
      h6Gj89fP2Er5f7deh3IBqmX/91bd//97WNn5EhIAsT+eB/UapDahkPO/9+nANoydN52U6/rh
      KGQh1AY9fRDp99+Ysi1/cNdrYNf9wW5b/uMbBpgGYDR94DdIAMTeNdba00l/Ll6r+t/fy+A0
      TcD0B3ZmC9IJwPg4bTLNj+/UmuaB5vVfQgIgfptS4Dj+2T6T9N9dbQzU/WiEoQVIAMSvU8qf
      umzGwHUgcLqGzOl6NqK56jV/4JcK29OSw5mHHycJgNhNKX/gZ5L+nvnGfNwwjvvIDoUEQPiU
      2l5rT0Au43/dmOufYhIA3X068LOp7eXLo1uFOW4SAJ01XuDGV/3lyVP2Ancvdsfcc1h9t8hG
      poTnWDz+4S/89cd5LLvK80c/sriSpJqJ8zq6AcDa0gIb2dpxHLc4KMeGjVV//zwc2htNrW53
      AFwLo72TWrGM4+Q5MzjLg+/ukNtYoXvqOs5WlFSqSjy5hqMsVlY+kMtLAE6cSgk+vPU3lAWC
      p36e/2t2X/NCnQxFamykbAxlklxbZH09yqXzvZzp6iLcE6Zkw/hgB9G3H+ganwKkM9yJqel5
      eOkEXnYLZZiNgzj0skop3COos5+auzvDWRWi0ShbWY+ejgmGJscpJLYwwmeIvnmOXbeYGenC
      GRjlxcNnzN2cJlWXznAtW9N1/Re4lRKUi1At41kWZhP+jb7sMFwCRzjFUkrhed6eau6+Ahgm
      vX2jdEcMOnsHGFYwOjZJX087XaEOQmf66AyCCgbovf8dHe0hejw9544tofHJJ8/z5/SO7a/h
      W3V/n0696m9hMAD8zWlKk9WdvZLOcCe1plL+HD6x7u+ebGgsYX5moB/12fg4au7/CiBOBtuC
      jTV/G3Ig4G8xFvsiAThJPO/juj005RNRupOf4EnROOsXc1psUTgqEoBW1+h+kFjXZn/OUZIA
      tCql/LN9Mu73tjxg9wPxyyQArUYpsGr+PL9c8ge+zPUPjfxkW4lt+Wf8XMaf5sjAP3TyEz5u
      ym8dQnYLtjb9liKn+AMorUYCcJw+/bytY29vTJN31o+SBOC41GuYa+/9LQuBgJZ78VuB/NSP
      Q60CK8sYjiPz/GMmP/2jVinDytJxH4XYJgE4Kkr57UXW3n9sGyiOnbyzclRKBVh9J4O/xcgV
      4LB9+sFzWd5sORKAw+Q6kNz4pN2IDP5WIwE4DEr5L3bjUbAsbTsunAQSgGZzbP+sn0n6a/sy
      +FuaBKBZGr3z16Pb967Su93ISSEBOCjP82/jk9zwOy8Efv3O5KK1SAD2qzHP34r725Zl9+aJ
      tPtfrF7g4dMXREZnuDAc4P/+9gQnHOH+rSkePXkJHf3cGuvgUbLGn7+9w8P/+S+6Z/7I9ene
      Yzr8I9a4gVu14t8tpVz0P6Ely5sn1u4AhHu4fXOWjZRNJRnn4rd/IrjynA/pDNfu/Qd2bIFs
      rY1IuEShnMEN92Nut6DwPA+lFLZtH/igPM9ryuM0q6bhOpjlEkYpj6qW/X37ZsBvQdLoKrPP
      7jKe5+33kPdNan702Wu2GTCxLBvPUbQFDBzHxnI8AiEYHh/k1dNlxqeGqSkwDINAIIBSqin9
      X5r1OAeq6Tr++n0ujWFbO/emNQwDgs3prKaU8h/vCEnN3XYFwKlkefTon5SqBne/nSOz8Hfc
      njF+NzLKkyf/INg3yWxPB05vD9n2LAO9feRqwV2FzCZ9brVZj/NFNQ3j491Rdm4SYR7qVuWj
      Hhg61Gz0ettLTekMB6AUdqlAKLPl35wZPt6y8xDp0KXtOGpKZ7i9cl0o5SGzRaCY96c2p/BG
      cOLz9AuAUh/7aqaTfgcGw0QFgtJ2REP6BKBxL6xc2r8flqf8dfvG/P6I+9eL1nD6A6CUv16f
      TvhvWCnPn+YEZd1enNYAKOX3xS/m/GlOffuD54YB5ul8ymJ/TtdoUMrvspBJQjHvr+Wbgaat
      24vT5+QHoLE9oZiHVMI/2zeWMKXViPgNJ3OENG4JVCn5OzHzWX/KI/11xBdqvdFSrxJYX/Gn
      LY1VmkDQ/3295g/4WtVftWm8Uys7McU+td6osSyMcnF73q785Uq21+4b978yDNlzL5qi9QLQ
      YBiAATLOxSGStz6F1iQAQmsSAKE1CYDQmgRAaE0CILQmARBakwAIrUkAhNYkAEJrn90K4VoV
      /vqXvxDoneTuzSn++Wges2eMG8NtPEvbPLhzlWc//jed099xabz7KI9ZiKb5bAAcO0u45xxX
      rp2jmFrh0twDrNhLUqUwpluiXC9Qqhu0WS5KqZ3/3AN+ttbwvO3PrTetW8ueSU39an42AKG2
      fkaHKiw9fUpkqp+IYey0yRkdjbD4bJmhqTHc7UKNYgd+osrf/dmqPzCpebpqfjYAVjlHbCOO
      pcJcGxzi6eP/xewe4cZwECfSS/xdgvO9A6Rr5k4XN8/zCB50X34ggGcYR94ZznVdqXlKajZO
      yHup2Xqd4Yp5vOhbzNARdoZDj45putT8ks5wsgoktCYBEFqTAAitSQCE1iQAQmsSAKE1CYDQ
      mgRAaE0CILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0tqcAKM/h3esF1lNFrFKa
      WCIHQGpjhWzZOtQDFOIw7SkA6fh7rPAAm0svSW1kebWyhKdc3rz8JxtblcM+RiEOzZ4+we46
      NgMjY0TcLYp1g7HeELG1VdoHp5D7rYuTbE9XgEAwRDoRJ56u0hWGyNAoi4sfmBzqOezjE+JQ
      7ekKMDB+gcLbN/ReusFgGLyOMG03b9LX10Gnc7TdG4Ropqa0RWk8hOM4B+8LVCqg3r3GOOL7
      /irPwzjifjlS8/hrNiUAnufhed5BH2aHDr1rpGZr1GzKadY0zaZ2/lJKHfxKIjW1rdnoDLeX
      mi35RthRny2kpr41m9oaUYiT5livAEp5VIolHKXwXJtsJkPNdlHKo5DLUKzUdr5vuc15jaGU
      R7lYwv2kZv2TmqVKHceqkk6lKJRrza0JeI5FZrtmpZgjlUqRLZTwHItsJoPtNud89Es1Lcel
      vF0zVyhj1yukUymKlXrTapZ2atbJZLJYjodr18mkM9QdF3f7+47XrOfpUiqW8MCvk8liux9r
      Wo6HVSuTSqUoV3++a+FoJ4P/olZMs/DTG6Yf3MP68IZ0DVy1ybk+gzfJOpPjk2QLayQqLl6w
      l3u3Lx24ZrWQ4sXD15z/4/eUl16StwwcleRsj8tS2mZyYopAMcpaoY2JyQl6zrQfuGYll2Th
      pzfM/Pnfyb99Sckxcdhioj9EKptlPeMxM2CSrXsY7YPcvX7+wDVL2QQvnyxx6T8fkHmzQFUF
      ceJpxnpN0rkcG1mDiwMOaauD8ckg3Z3hA9cspjd5Nf+OK3/6N5KvFrCMEPZGFx1WCivQTj22
      Sa8qUXQUoZ5xbl+eOnDNwtYGr19Emf3D92y+eo5thnA2ewjXktjBDqz1Lbq8DDWjm9HJMGc6
      di/bH+sVoKNniEvnxjAA01TksllSiXUWY2lMq0jVtik6bdyd+x3tVJtSs7N3mJlGTRTZbJ6t
      zXWW19MY9SI1y6FaKlMs5gkctNP1tjN9o8ycHQHAxCObzZPYXKdv7AIjkR5u3LhMTXUyNzdH
      0C03pWZ3/xgXJod2amayBTY31hmcuMhQdxfXb16lVi5RKBQJBJvzPHsGxzk/Mbir5kY8RmdH
      O5lMlo6OMHYgwt2v7oDVnOfZOzzJubEBAAzlkskWicfXOdMR9mt2dlGvlMgXir/4orhlXgSP
      nb/Og+/vMRTpo6+rk9m5b8hsrBBw65TqVSyn+S9VJmdu8uD+1wz19RHp7uLq3Dek4h8Ym/mK
      P/zb17x/86rpNc9evs33391lKNJHAItk3mK4rwvsGpVaDftgN9j5RdOzX/H9t18xFOnD9Ops
      lTyGe8NMzX7Ng29v8u7t26bXPH9tjt/fu81QpI9Msca9+/coZLbwrAqVWhVXNX8TzcUbv+P+
      N7cYjETIlCy+vX+PfGqdize+4/7cZZaX3v/s7xzrFKicjvEsGsVMppi9OM3y0numr9xitFvx
      9Okj+kYucnYgwPyjJ5y/MdeUmsWtNZ6trhJM55k9P87b5SgXrt5mqNNlfv4RA2Mz1Esp5p/F
      mL5yqyk184kVnsdiBAsVZs8Os/hujZlrt1FOncGRSUJmgOlzIzx7PM+l23ebUjO3+YEXsRih
      YpUrk4Msvo9x+cYdXLvO8NgEQdOglk8wH01w4Wpznmcm/o6XsRhtpTqXxyMsfthg9uYdgpVN
      njx8zMTF6wyGysw/fc3sneb8e6Ziy7yKxQhXbGZGungbTXL11h2MYpzHDx8zdek65cw687E0
      l67f/tnfl1UgobWWmQIJcRz+HwQt/BXt7hCrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Max Suicide' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dWYwcSXrY8X9mVmXdV1dVV98nu8k+2DxnSO4cu4I0i4Ukr1aGtBC8EHwA
      hqFnG4YNwdAaetGDAcOw5QOwJBuGHwzY1oMtS4L2kHaXc/PmNNkk+7677juz8vIDZ2d3ht1k
      n1XFYfyAeRh2V34RjfwyI7+KjJAcx3EQhFeU3OoGCEIriQQQXmkiAYRXmkgA4ZUmEkB4pYkE
      EF5pIgGEV5pIAOGVJhJAeKWJBBBeaS1JAMuyWhG2JXEdx2lJXPE33h/XMbdlX8z6Otrm/2h6
      XMdxkCTplYj7KvX1KHF3SQCLB7dnGT1/lszCIyID4wQ+/a16OYeGH1Mrk0wmn/lk9tEjpPFx
      orUMP3zvHrIa4MrVS/jdyucba2lYlbkDN1YQjtuudwDLfHo7sW0Lq7DC92bXcak+zp9KUizm
      +ejGx0xefougkWY1rTF5forle7fYXC3w+vg4jm0gubwMjQ7jcym7hRCEtrDLM4AE2Ni2jaY1
      wKjSc/o1UlEPulZBCqSYPnuWyeEwd+88wdDL5NKreFJnuTw18vSg/k6uXZ6msr5MvtFobo8E
      4QB2SQCZVGeA9/7mbygQJODzE/K5CAQCuD1+vKqCWckwu1hieLgTRfUSCKcoLN/kwXoWN2DV
      8nx88xb5BqhWg3SmwMbmZtM7JwgvIrXihZhGdQs7/8Nmh8WybBSluYUvxwHHsZHl5sZtRV9b
      Fffp39hBlg/+ENySBDAMA7fb3eywNBoNVFVtakzHcTBNs+n9bUVfWxXXtp8O2V2ugxc1W5IA
      +tYDzO//XrPDvnQlupct5ssYd9eUWXr4MY/XSqi+MFevXsbznEJOvZhFcwWJBTz7j2rUsXdm
      D9rWY9GqF6BbEfdV6uth4+6aAIovwtWvnGPt8W0KG3M0Iqepbz8iGVS4/XCNU5PT7Cx8guFP
      cSYZoBFQmb15g52yi4vnT3Hv7i0alo8rb30Fv6iCCm1s16cVq1bkh3/+p+SVFH67TK1hUygW
      UdwqiuxQqdRxu100yhVq9Tr1Ro18oUpp/TFbJZvesWmm+qPUzWZ3RxAOZtc7QDDewzu/co6d
      jSWsQBfr967jqD5wJCRJxu12YckyLtWNJxDApXrwelQSPX0EfCqq20ElhCyD2aiRLzUwjDo9
      3d3N7p8gPFdryqD5NZwHf9rssKIM+iWN6zjOp2XQg8cVZdATJsqgJ+8oZdAjzgZ1sG0HSZb5
      YgHKtve+6hnLK6T/3R8eLfQhtKZE5+A4iDLoCQj/+q8R/OpXj3SMIyaAzfzcPMMT488caO7R
      I3o7OlBicQJfnA1qNDC3to4WWnjl2dXakY9xLO8DVNYe8sGTHVRvmItDEW7OLqEpfkJuF0G/
      n5s3blJ2wrx57TyiKiq0k2N5WnEsh+krb9EV9VDIVrj41tv0J4I0tDqaVqJUarDz+Aml4wgm
      CMfoiHcAiVAkjKraoEhI4Qgh1eb2e+/hT6ToDHvxePz4/B76R4dp/iOZIDxfS6pAWjpN4/0P
      mh0Wy7JQlOYOwhwcbMtuetxW9LXZcb1Tk6gjIy/fZDhRBj15ogy6P0cYAjmYpo3rEK88ZteX
      +cF/+7eHD31YT+uRL1Xci+98izNXf+GYGyT81BESQOfJ403OTAwf+JO2baFVxCPxfpjildIT
      deQy6PqTu9xf2GTs7GUyj+9QadiMzlwkM3eLHcPHtYsD3Hh3DkP18ou/9AbNH/gIwt4OlQCO
      Y2M1auiWjVGp4lclNja2iScGmUl5eJLZomS4qWV3KBm9jE1fxq5uYoJIAKGtHCoBGtUcH996
      xOnzF6hv1aig0p2KsDp7j1wpwdmZCfRcDt/gECFfCEdRcdRoa1bhEoTnOMYqkEUhXyUaC7/w
      N8uFHOtzd48n7AFYpoXS7HWKHOfpvKhDlgY7B0bp6O4/8OdEFWh/RBn0hIky6Mk7mTKo46DV
      K5QqGtF4HPUY53ivra7wJ//h3x/b8drRP/297xIMhlrdDOEF9kwAUy9y8+YssXgM3H46Y4Fj
      C+rYT6+KX2pi+/GXwp4JoGVWSJ65iL54i6qW4t4HH7O4XeX8V86y8NFjEuPD5J7MUbUt/L4g
      7kgX/f4qN2ZXmb76NjsP3kVvOHRNXkAxJUJ2Ae/ABDG1BV9ECcIe9kwAVyBCaTPDufOTPH68
      yep2hf7+HhTJId57munROA8bEApDKNjJ+tYG+VKdnriXnWyZjp4RzqQ8PNBjmIWHrNs+LouT
      X2gzeyaAJ9pHfPs+776/zOmZC0S8NvObJfrdIVJdbsBFPB5F9TioHjfxjhiGq8FaVqW/M4JX
      8oLXRdzlpqbYqMmeJnZLEPbnxKtAttlgaWWdwaEhlE/XbiwWiyzNPznJsLtq5kzFybMzuN1u
      UQVqgpeyDCopzR8OGQ0Dt7q/E1GRlGN5t1UkwMk78dmgRkPDxo1bdjAcB9s08fl8Bw72U08y
      j/j9v/rdQ3++Gf7gb/0bBmKDrW6GcML2VdwvpNfZzlTQy2U2s1mWl5f2/F2tXCBfqh9X+wTh
      RB1qek69nOXOnfv0DUW49eM5hs5PsXLrOltWlHeujlKzYty5/uc0LC+nr1zh8fs/pNDw8s43
      f5WImA0ntJF9JYBbkdmpVvGZVUylA0OrgyuK6nIxNHGBwajOVnyU4OYGmvN0HZyuoQkGox6W
      tBKm0sH0ZCeShZgOKrSVfSVApLOPnft3WLT8nJ/pIOa9gOqYaJaHZMKH4gsSkBcJjI0RCXXg
      OF5MbxK310W34sM1kCNTsRgSJ7/QZlpSBSrWCizk5psdFssyUZT9jfrOpCbxuQ//oP9Togp0
      8lq4NOLh+FxephIjTY9rGCZu9/O7LCteXMdw4gsvh8+dDZZeRcNLwG1R1SUCvv1dtRzHpl7X
      8Pv9aNUq7kCASrFIOBJ5Zs1QgFJ6lo/+7O8dQ/OP3/DM3+XM1X/c6mYITfK5MqiRX2Ypq4FR
      YGWrhG1ZGIaB7VhsrG+S215kM1PDdhxMw8CybRzbxtA0VtY3AEivrJDPrrC8XWFnax3TEtMi
      hfb1nPGAxUfX/wZLdgimzmAVs0iNNTarac6dDvGj67fxdg4zmZTZLui4I0kA6pU0H6zs8K13
      3ubh/RtEEr3iVUihbX3u3HR5/ZTX8pScCqbcQTjZz+nxbp482aEK9A+PEZd7sdN36J+8RGdY
      pV4o8tprUzxeXAPAF0xypcfFk5V0K/ojCAfyuSGQKzJIj5pjdtvidF+crq4kkuyhM5Wgb6CX
      cCzF1sIskdEZ/FoazXQx3B/n5p1Z4slOAKJdXXT1nCLmsUj1DCCZNbFTvNC2WrM2aK1IrdT8
      Mqhpmi8slXkDKfyh3mOLKcqgJ++lK4MiqeAeaHpYBxOeUwYNBkOongPsdyy89J45G0xTo9FQ
      8Pv3d8XS6zVwqXg+PbG0WhlH8eHz7H2ibayv85//sAVrg77Ad/7+P2Bq5lyrmyE00TNnqa7n
      yWT89Pb4MEwbRXLQTRu/34+p12mYDoGgH/nTufLlXAZCcWxDw5bclLLrWJ5+4oE6tuTG7/O0
      ZK8qQdiPPS/TH//k+wS6J3HXl/no3jpXv/4NNu/+BJfiY+D1t+kL/WycZ5saP/yrv6Jj/DKD
      UQCLj3/0PeaLCr/5t3+VgCo2RhLa057vA4Q7Bzh7poeq7uHixCC1Wp3O/lNcmBjGtB0sy/rs
      dyXFxdS5C5SyO0//Qc8gx8YY6gigmSaWZX/u9wWhXTxzB/B4oiQSCtFoH+CmrzvGdgUGO6NI
      VgC3WyZUz/PJE42Z00MEY3FQXBS0GgODw0Q7/DiKj1rhPlZ8DJ9kUijqmKZGqrOzBV0UhL0d
      qgxqmY2nr0i6Dje2r9VqlAqFQ332KAzTwO3a++E+GovhPcKrnrsRZdCT1/QyqOJSj7TdqSPb
      aF79CEc4HNM0sFz2rj9TJOXYT36h/e2aAFq1gqR60SsF1FAHXtfB1gWt5ja592iZrsExBrvj
      z8wIXckvt91L8WFvhP/47f/a6mYITbbrmV3KZcnnd5hfzeKWLDLpNPWGiaHrlIolDEMnk86g
      Gxa1coF0Js/PT/rMZ0qMz8yQXV9Ab4iHX6F97T4Esmp8eP0Bl3/pmyzO3qEqqVSXN4k6ZWre
      BN76Bncer5MaPU+vkuXmwyVe+/q3GU99OoSw6jycncUyZWRZfAcgtK/dxzaKnytvv8nW44dU
      dJPOVArZNlEDHZydHsd2FC5fe4uJgQ7Kjo9LMyNUyzV0/dMN3WQv3Z1RAv4QYNMwTHS9+WN+
      QXiRXe8AkUQSye0hcMqNrLhYWlxmbGISLwZuSWJi5jyPniyjRIcY6klQMmQGgwYPFtY5PzFM
      vLcPdyBAKlpEb+hYhoNp6njEPBuhzRzbbFDbsrCRcO1jI426XqdilI8j7IE8b2caWZKJBxLH
      HlOUQU9eW8wGlRVlf8vMAS7LIVlp/sOxYdq4XXvETcab2xihLeyaAMVcjmBHxzO1/lwuT0dH
      bN8H/+nN5ZnJcIUC/MWfHaihx+G51+Df+g74/c1qitAmdk2A7PY2nnCAbCaPpXjo6giys73N
      wnqGK2E/m1tpwvFOFFunVCjgj3WiOhrpQp2e7iS5nS0cTxi5ksedTKHn0zhqiFQ80uz+CcJz
      7TkEMsrrPFis4dg1lN4QmzUXlm0z//A+pjvE2uYDPFKdQDTCWrpOef0267kq4zNvsLX4CafO
      XcNbKxKJxJi99QFLWYVv//a3ENdYoZ3sPWyXZfoGR0l1hLFME9XrRZEkHMfB4/Ui4aD4o4yd
      GiHgBl+kize/+osM9yWZnhxndWEeC9C0HP74GGOJEKIQKrSbXe8A3QMDuD0KPV43dmQAryqj
      r6wRGxkmFfGwtLzO+OQEbp6udjs41I/TF2Njp4Qv6UMve5k5N03Up+BSPdg1E2Wgm2CTOycI
      L9KaHWIaDdzND/v8DbpVFU7gzTVRBj15bVEGPRDLwa42f0DkWCa28rPZoJLHjRQSM0BfZftP
      AMfmySe3yFoBLp89/dmGd8+jFQqYwSDBL2SmU9ex7i8fuLFHJQE//y2A1BnBNdn81SmE9rHv
      BCiuzqFHhplJ+DDrJRbWd0j2DuI2y2xn8nR09WNX0uRqNoMD/VRzGyzMLtP12jkKa0s43hj9
      XeLLJqG97DsBsgWD/qkoPkWmvL3Fvbs38W1VGPJrqMlulpdX8NQ3+Hh2A+drV8ltVIj6vTiW
      wcLcfZZ2HH7jt39dlEGFtrLvN116+6LcvXmfRwsrbG9mGD93CZ/cwBuI0tvbi9etka95OHd6
      BMvUMQ0DTW+gaXnU0CAjibAogwptZ993AE/HAGcdD1XLRaJ7gp18hYHzXXhcLtyKi8H+Mbrj
      JWqGTDQWoSuUpW4oxGNRQsMqsnuY0En2RBAOoWUbZR+mZHXkuLtslH3Si3aJMujJe+nKoIZe
      IL38YdPjmqaFy/V0ip9LDdE58HbT2yC0l10SwKGUXufe3BI9o5MMd3fs+WGjnqNiBPB5JLwe
      FcdxmJ+7R2poipB373UjasVV7vzgnx9H+w8tGBsVCSDsfgdYnF9i/NwlvJJNYWeNlXSFU2Nj
      NGplQl6ZGgGMwjqLy/PEes+SdxxG+pPg1MhsFyGYw5v0k8vkcIU7iYfEm2BCe9olASROT09y
      9+5HeBJDxOw0C7OPMTwRpOI6E90eFvVuzFKBnq4Emq2RLdmM9ENx6RH+wREym9t0yApPNmQu
      dYoNkoT2tUsZ1CabzhCIxNDrNdK5CqPDfdiWTb2U5cHjJWwHGrUy6UyBn00scFjYLmLmtink
      0zRkleGRIdySSalcI5/PN7FbgrA/u94BEl09qBWNUDQGjR5qDRt/IIjV7adhgT8UwUxOoZsQ
      CgbpTT0tJE1dvIbH48HQdVAkJMmNJFmoqoTz88soSjKKy9ukLv6MA58t0iUrYlgmtLAM2uyy
      ILSmRCfKoCfvpSuD2to6lSf/pelxHRxMXx/+oX/Y9NhCezpgAhi89/0foLuDTJ67SGfkcFOJ
      HbuBra0d6rNHZcvNv/MI7evAdwBZVvB4vah6hh+/t0lXTw+VrRXqeLlwqoO/vrOOqqpcHk9x
      65MF+k9NUNtZoNRQuXjlEr6DrbMrCCfqwKdjONnHhXNnCbstAl2jDMe9lOoNtjaWKJXKDJ29
      Rn9niJ21NDNvvEUqqPP4yRaGXkYTs+GENnPABJCJRCN4PCqyGqAzGkR2q3jdLrp6+vH4w4S9
      MsFgiO6hHmbfv85O1cPgQBzVG0RsFSa0m5ZUgRq1NE7xvWaHxbJtXJ44auKtpsUUVaCT99JV
      gSR3FLX7m02P26qTQmhfh04A02hgmBYut4rb9eKxjWVZKMrT3ytn57j7w39y2NCH1jv2a4xd
      /p2mxxXa16ET4NGd98mbKo7j5eq183seyDI0MsUqq8vLXL50EQDbalAvbxw29KEZjWLTYwrt
      7dAJ4NgWWr1BtDPJ5uMHLGeKnBrs5uHcPNHuMWJkuf1ggfNXv0ZDqxxnmwXh2By6Ku+PdvHG
      m9dwa0WqdYOZ169gVUsgw/LiMrFUN+cuv0l3SBG7wwht69B3ANmu8/677xLrHKAj4sWrSBAO
      o6QrDA10sjg3S06T8UxfIBoJY3rF5DOh/bSkDFopbZJe/l6zwxKIjtHZf7WpMUUZ9OQdpQwq
      ZoOeMJEAJ69p3wMYWh3HpaIqMtVaDZ/Pf6htULfKJf7nvVsH/txR/PLENMPRvd9vFl5NB0qA
      lbsfsBMd5fWBKP/3//0lv/wrv0bI/8Urm83W5g6prq49F1u2HQfNNA7Z5MOxHPvFvyS8cg6U
      AJ5QAlkvUsjpRBK9mHqRH12/Sd0d5dypBLoJjidENZ3HqqWZW8kxOjbK0twcluLn2lvX8In5
      QEIbOWAZVCHuU5hbK9OTCqLn19nRXMS8bgIdUWZn50kmIhgNg3SxwRtvvUlYKpMcu8yZTplM
      /WQ6IQiHdaA7QLCjg0TUg+5USIRkwuEIo+kyDZdKvazz9teukkvnSHQmiATh4/feZWTyLMbC
      J2x4klwInFQ3BOFwWlIFKtaqLBWau0rEYKwDv+ISVaAvYdyXbjao361yrqev6XEbjUbTYwrt
      7VgSQNd1PJ5nv+m1GhqW8rRs+vMKaxne++PmfRE29vY0E+9caFo84eVxLG/oLiwuUM/l2CmV
      PvfvpbV51kraM7/vAI7tNPU/QdjNMQ2BHFaffMKDbIXLFy8x+9G7mOF+rvZ50StZ5nJ5QnYR
      3+AEMfVklyMXhIM4pjUaJHoGR5m5dBmfXSac7KeRz9IAPIEYVnWLjaokTn6h7RxLAiTiCfzR
      MNmFR2iuCJg6o6dPEYgmiXpVfLJNrKv3OEIJwrE68TKobTZYWdukf3AA5dO5EbVSlcJK5iTD
      fk4wESbcFROT4b6kcV++2aCNBs0cDCluN5IkiQT4ksZt2vcAttlgfX0N3CF6u5P8dCKo3ahR
      x0tA3XtEpdfruH0+ZCC9tshf/Kc/OHBjD+vb/+xfEYyJPYqFZx3oGUAvl0kXi5TSi6xslz/7
      dyO3xHz6+a89bi4ti21ShbZz4HuGJMnIskKjsMn3Zj/EkTxcGomAy+bWj/+STzYrvPP1a9z8
      wT0sj8yV189w9/YjqnWHdybOnEQfBOHQDpwARkMn0TNCQMvgTF5Aya1Q102gSkNNMJJSKFU0
      hiYuEPWU0St5+qev4Ww/OYHmC8LRHCgB3L4Ap89MEQkEcOwI23duoftTDPYEUJ0wxfIqRX8v
      nZEOTJ+KR1FRvN1k793G9iYRC5ML7aYlVaBauUR+c6Vp8VLD47jcqqgCfUnjvnSzQRVVJdbd
      f+JxJEnCFwyfeBzh5fVMAjiOzdbqIlXbx8hgD897593SKzTkIL7PLm4OhWwaNdiBX5VJb6xA
      MEXyCzvJZNeXm1IG9Yej/Nbv/usTjyO8vJ4pg9ZLG6ylG3glA81yaOg6hmlhWxa242BZFoW1
      ByxndbTcCusFnYZhAuA48OTBPVa2Mlj1Ik82cnjc4iVgoX09cwfw+DuQtCesphN4PSvMPloB
      SSGpekm8dp7Nu7ewyhtsSQav9dvMPbzNgiLx9bdfx9HTqPERtHyWkiKztb3DwIhB2C+WJBfa
      0zN3AMe2OXXuKv2eMgvpGv2npugOK2imhaFrlKs6A8OjnJ44g9/jYerCFfo7n46z1x89YWVj
      mSfzi7ijXZyZnqGnw4/jOLTgWVsQXuiZO4Akyyw/vAWhHl4b6+bB3dsosSHOnfby4e37dPYN
      EkqEWbh3n+SZQeIeMLu6APD1jvOrMwmMSpaq5KUrrmIZdfJlA6NRo6e7u+kdFITnaUkZtF6t
      UM5un3gcWXGR6B387P9FGfTLGfflK4O63ETjyRON4fL6kZWWdE94iezzDDFZePCQfE3HF0ly
      ZnTgC+VRh1KpQjgc2tfR9FKe9Y9+eODGHkT/679AINF1ojGEl98+Z4Mq9AwOU9c1hnpTmEYD
      bJOGaWE0dKq1KuvrW1hmA71WYm07i2EY4NgYholWq1Cu1hGPwUK72ecdQMLrD+D1evH7PNy4
      +TGXRpPc3XHT2HhIqHuERn6T23drjPQnyZVtSlur9PV2sFqwWbh5nZLh5hu/8W3iYp8MoY0c
      6p1g2zTI5nJYlk00Ncj0WD+qL4BlmPx0w8jerigf3Fulp0MllBzhzTcuI859od0c6ClxZGgY
      gOGeTrZKDUb7OlAlG0mSGRwdJ6jaZKoOAykVo7BONNlFNNbFqcES2YpBt5gOKrSZEyuDVooF
      3IEwHtezN5mGruE0Tvb9MLcvgPyFspgog34547ZlGTQYie79Q8OEnexJhUYdHkKSj2nJI+FL
      7TkJ4LC+sky8qx+vevAJbZlMhkQisevPjNVVsv/y9w98zP3q+69/grTLWqWC8EV7JoBtaKwu
      zqOrEfrjfpDcWEYDRbbJFSoEg37u3b3L+OQMAY9MvW7gdjmU6yaJeJzllSUkrY4rkcKq5HHc
      AeKRYDP7JggvtGcC1PJrdIxMU9jewaM7SIEBsksPUdx1lnYsLp2foFatUtMMHt38gNjQDFJp
      kQ9uL3L5F78BQLFYIBKOcPfDH7OaV/nN73wT314BBaEF9hwoL8yvsjb/kKXlJSyglM+QLZRJ
      9Z+iJ6ywUzLoiEUIB71EUgOcHk5Sqim8NnOahvazFaE1LU8wfprhmI9n14kWhNba8w4wNHWJ
      mXAEvVzEdLvRllYYm57Co4AaTjDYl6IRtMiVavQPDABuRoZ7yFZhuDuBkwzhlmVcXg+NYh2l
      5yxiACS0m9YsjahpSLXaiR1ficWQdtmjVZRBv5xx27IM+jx102Ypf7z7BHeEffQlxQvwwsEc
      OgEcu8Hs7Vs0PHHOTozi2uXtedu2kSTpmavx6k6Jf/FHf33Y0Lv6xuuj/M63XjvWYwpffodO
      gOLKPEZsgNG4D1uvsZbJoQaixHwS69sZ4qleCul1EqkuytkcDcVDbyre1FWhBeFFDp0A4d5h
      XPfvcmfbxfl+lcV8EJY/YWqsk4/ef59A7wSDUfAGJBYWi4BGMhUXE+KEtnLo+QJ6vUqwo4uA
      6tBoWLhcCrIkk93JMf36NXzyp3N9ZBc9/YN0dYSxj6vVgnBMDn0H8PgCyLki3f2jhKwNGsUG
      U9NThFWL9e0i589O4VEk3B43Yb+CYw0gFkcR2s2xlEEd28KRlOeuIvfz9EYDyznepwGXLKO+
      YBEuUQb9csZteRlUkpUDPdzqmsbq8tJxhAagt68ffyx2bMcTXh3PTwCrzmZWp7szwtbWFol4
      HElR+enG745tYTsyinKwq3lmZ4f//sd/dNg2P+M3/s53uPja68d2POHV8fwEUFS21h/R1THK
      dqaCYtbxdg5R2VrC8kSxcg9ZyIW5PNNHNlsAd4DeuJfFpTXiPUOoVpmtdJFAwIdmuxjpF6s0
      CO3lBUMghYRqs7CZJ9zRQTW7iCnZfP/6DRyXj69eHCAa60AqrbJWiaLUV0n6Onn08AHmWoHx
      uII33MHKxg4eB/T+LlEGFdrKC8ugPSM9PLw9R0f80zG2pNA/cporl84Ti0aol4tYSHT19BMN
      +Slm0nSfmiaoOngCIVKdXXSmEsRCflEGFdrOCx+CZW8nb771GmGPjG9sEln14XVvo0se/NEg
      pwayeGJh+l3g+IdwyQ5StsTYUB8et4zbpdLrUZFs+7Ngu8xTE4SWaM1sUMNoelkQRBn0yxq3
      5WXQg3LqeYzH7x3pGHJiHKVz4phaJLyqnkkAq9GgUK0S30ddXavXUT/d/f0gnOIa+l/+7gE/
      9XnqlX8kEkA4smfOXdswKJRKAFQLO9y5+wnVWp1STaOQ2aKqWxSLRQC2t7bRaxUWHs3yeHkL
      26xz/85t0qU66wsPebS0gS02xhDa2N5DINvgweNlhof7mH0wi9cbwapuEU4WqDbCnI1ESOdy
      BFwmuiuEnd3idn6V3oExPNVl5msBOox1thNxuoOi+Cm0p11GLw5bK/M8WFjH5Risrm3i9seR
      Gxuo0QE2Hi3T2fdza/vLKslEnKDPg9+rsrG2StVyoRW2yJR1XI5BsVQll8s1r1eCsE/P3AFc
      Pj9T0+ewJZXwQIpSRSMcjeIYnTiKD6svgcf39GNnp6dwKQrIMtHRUWSXTLFQwhcM81okgSmp
      hPweDNPGsX9uopokg3rEV+QVMbdUODpRBj1hogx68l66MmilXObhJ/cP/fkzU9PEOjqOsUXC
      q+q5CZBZe8yte0+QI3HGenpIDfbi+cLXuLVqGcUokyZBX3TvzM9sbhLp7sYN5HM5/s///l+H
      bnRHPCESQDgWz02ARN8Y41slgpcvUXs4yyd3NokkhkmodWYXtpg4d556NkPQVSfnRLF35kjX
      XZydHmZ1boGcIXF+aozluXs8XinwtU8TQBDaxf6/w7INOgfPUM9uUamWqVe2uHN/lWI+i+UA
      jkWlXGFt+RHr6W0yJRcJ1WF7Yw49MMipvs6T64UgHNL+E0DxEosE8KgKmUyOUOKlHYkAAAUf
      SURBVCyGbJk/+7mtkSk1iEVC2KZFOBLF6/GguFR2lh+yvCXKoEL7eeFDcN/5c0hA7NQpJEli
      ZHwcHAvdsHG73cg4SLLEJDJ26nUsR0ZVXeBISMRBlojFekF2ffYugMvlIhJ9zgYaL2p0CypI
      wpeTKIOeMFEGPXlHKYO2LAFawbZt5BZsndSKuK9SX+HphWa3BZFfpCXfAwAtuQO04s7jOA6W
      ZR3q6nQUrbrLtiKubds4joOiHHwrr5YkQCuuEK9a3Fepr4e58n/22VYMgQShXYi9RIVXWsue
      AdYf3+HBcppY7zhdUo3AcA+PZ9e4fGHyyEuol3PL/OT6LLGBEU51wO2Hq/jjfZxOwo25VYLx
      QQZ8NqGhbh493ODy+YkjxjS5//6P0WLjnB8M896776NZbi6/Ps2tj29jKz6unB/lvQ/ugTfC
      5ZkedC1EZvMRw2cvE3QfJrrD1vJj7i5l+aW3r/Hgxo/YLjsMnT5Lbe0+m4U6o+euUFy4RbpY
      Z/LKG1S2i8QDGkU5zqne+CH7anD/oxukiyV6zlykOH+LfM3h3LWrLN75kLIOF69cZvbGDXRc
      XPnKBBtLEoqxQsfoOeL+w51yllnl4+sfU65XmX79Krc/+JBgLM7Z8QE+vHEP2RPitale3r/x
      ANkfZ2Y8gSLHWFueY/zcJXyu3f/Gyne/+93vHvIvcSTLGztcvfo62fVVZKPMnfkNzp07j899
      9JtSJbPKehFGR4epFXNMXLyCld1gq+7w5leukk+vIWsl7i5sc/HC+V13sz8Ymc54hKIOPlcN
      NTDEeK/CgyclTp2dJuGz2VnYYvCNt4hU85h+ifsf3KV38gKdYe8hY0oEo3FMvUI8nmR1YQ5X
      MMnQYIJC0eHq6+MsPcngCQW4+voEy/Ob5DaWKFh+pk8P7nsd1936muzpxe0YeIJgWCmuzcT5
      ZLFAMtXL1HgHj+9u0jU9yWDEQ9XSmf3wHuGBUwx0Rg69Iogkuenp68bWdDx+L1vpNN39o8jV
      Er1T5wg4NQqbeUauvYmvmMb0wf0P7zI48xrxwN4P5S0bAjmWiWkZ2Ci4PSF6OkMUy8ezb1g4
      Ocpb186z+WgWDQfDMDFscGOhmxaODao3TE/ST6FcP5aYPyUj0zB0GpqO1+NCa5gYhoHqU9Dq
      Bppt4VZUhgd7yOeLHM8DmMPEha8wMRRn9uESpqlj6jqS6sY0DUytDi4Psa4BVKuCbh5lhSaH
      lccPcCcG6YnHsAyNhqajejw0jAaGpuH2u9E1g4ZpoMguegYGqZeLOEfprW3yaO4xqbFJkh1x
      3rz2Bq7qKjtFnXrDxDBNVI+Epploto1b8TA61EU2W3hu1JYlwHBPnOs/+YBQqgd/OMLYmbM0
      cluYx3BGaJUcd27eQIl1MtSd4v5H7yHHUpwZ6uLDn/wYb7QbfyTK+OQ5tMzG07lMR4vIh+/f
      ZPHBXXK6Dy03z9y2w+RUP9n5++xUZAanJtm+8y4VJUDIE6BzcIwur0axbr748LtyWJm7w/z8
      Ijc+eUJ6bYFbnyzQ1d1HMuRw/cY8A0NdhF0m1z+eZ2ikh2gsxtTkKNvb2cOfipbG6uoWD+98
      xOKmRdCV4YOHeU6PdkF1m7vzRU7PjKFvPGY5U6cjGqWzt4+RTg87pcZho2I1Cqwsb3Drw/fZ
      ypd4cPcW6bqH8akRNu/foGR66BsfY+3WdRreKCFvgM6hCeKuMhXd2vO4ogokvNJEFUh4pYkE
      EF5pIgGEV5pIAOGV9v8BsraHSNgQUZkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Max Year' width='192'>
      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
      MWkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='North America' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEhUlEQVR4nO3Xzyt8exzH8dc58x1m/A6NGGWjLESRzSxYUMpaNpb+NEkpZUUsFMkK67FC
      0Yj5QeOciUxzvqure793dVd0X8/H7vQ5pz6nzrPzeQdJkiQCTIXfvQHgOxEArP36+0W1WhUn
      IjgJmAHgjCMQrBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArP367g0AfyoWiyoWi5Kk7u5uLS0t6eHhQQcHB5qfn9fk5KQ+Pj60v7+vVqul
      kZERFQoFBUEgSSqVSjo7O1NbW5uy2awWFxd1cnKiRqOhRqOhQqGg29tbRVGkIEmS5DtfFvjT
      X59kkiTa2trS2tqanp+f9fz8rCAINDc3p4uLC6VSKc3MzGhnZ0crKyvq7e2VJFWrVfX19SkM
      Q+3u7mp5eVk9PT0KgkCVSkWnp6daXV2VxBEIP1AQBEqSRGdnZwrDUO3t7RobG/vHPZVKRfl8
      XkEQKJ/Pq1qtfq0NDAyoVqvp+PhYo6Oj6urqUhAEiuNY29vbmpqakiR9fHwQAH6mMAy1sLCg
      dDqter3+r/VMJqM4jiVJb29v6ujo+Forl8va29vT7OysCoWCUqmUJKmzs1MbGxu6urqSJJ2f
      nzMD4GdJkkQXFxcKgkBhGKrVaimTyej6+lo3NzeSpP7+fk1PT+vw8FDlcllRFCmXy+n8/FwT
      ExM6OjrS+Pi47u/vVSqVNDo6qsvLSw0ODqpWqymfzyuOY93d3TED4Of5/PzU09OTWq2WhoaG
      lE6n9fj4qM/PT0lSNptVLpdTFEV6eXnR8PCwUqmUNjc3tb6+riiKvv4aYRhqZGREcRzr9fVV
      mUxGuVxOzWZT7+/vBID/h2azqXq9rv7+/v/0HAHAGkMwrBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArP0GD2H1U5icCeMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pak By Year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVlklEQVR4nO3daW9b2Z3n8e/lJoqrSEmULFmWrcW77FpcNVXJdFVXTw0SIJ2tl6QRdM+j
      Bvpt5KUMpmcwwaDRHXSngwwmySCZdJerKlW2JVu7ZFM7RYqkxJ13OfPgWk6VU0yZNq8W3/8H
      IGRL1P8eXJ3f5bnr0ZRSCiFcynPcDRDiOEkAhKtJAISrSQCEq0kAxJFSps7Sgzs8WNl84VoH
      u+ukd4qY1SLbhcpz1ZAAiCM19+H/ZiGrCPk1TKNJpVLFtBS6bmCZJoZp0ajXqFaq6OUsP/rx
      z6g2dZrNJvVGA8s00JtNlILl27/mRz/5OQc78/y/B5s0GzUq1RqWZVKv1ahWa9SqVXTDwtSb
      9s+eOujpO6b1IFwqvbrNq9/9U4a7m/z0H/4XdY+P4OAYRjbPW9dSrDR7+fT//DdSkRCh8TeY
      uXeXKxfH+NXP/pmrb73L+Bkfn9xe5Ft/9X3Aw/XxHqaXMxCK88HP/pFffnSf97/1HT6+O0tX
      KcPZy+cpVgcJ7d9jbiPPH/3Z3/LezZEn7ZFPAHGkUgNRllY2KBb2OGgG+I9fvUUxt4OuNygf
      7GMoiPWP8M4bl/FFB5iYvMzlCwP0DI7x7tu3mL67g//sFQKaXe/cpRtszE/TrJVZLZq8fWOE
      YqnOmfEpLo8P8sa77+Ld32O35OHbf/l9Jodin2uPJifCxFFSRoNPPvg19cgoV1Mat6fTvP3H
      f0xm7gN2a0EuXrlMaW+bs8kge1ov1fQ9KsEhIgEYHzvHz//xR4y9820m+sPk0it4By5QTt+l
      Gh5F33pA0Qwwcm4UAx9BvUDP8Fm2HuaJB/b5cCbNq195h7O9kSftkQCI00NZ5Av79CQSeLTO
      lHyuAJTLZSKRyJe/UYgT7rn2AarVaqfbIcSxkJ1gcSJYRoNCoUC52uCzYxLD0HFykC4BECdC
      eX2Bu8vrfPTvH1Hndz1+/dEydcP+9/b21pPvHxxk2d+vv/By5TyAOBk0HyNjo5QXZigVt/nN
      h/eInJlgoNtkbWWeWP8we7kcGzs56paPcGOd7UKAN796nfsffoKWOMt4wmR5PY83NsA7t64+
      02LlE0CcDEpndWGO+PkJKOYJxhJsb29i1A5YzxSIRUM0m00S0RDNconhicu89vot/NUCnnCc
      zM4Wyh/ijbe/Qn848MyLlU8AcSIE4oO8eXaAHj+U8w20rQqTY+foTYYZHusiv1egP5WiXqkS
      jsWJh6Pc+XSGiasT+MkxMX6BaKwHv89LMhl/5uU+12HQ3d1dUqlUu78mxInzXJ8A1WqVbDbb
      6bYIceSeKwChUIi+vr6ONKDZbBIIPPuYrR1KKQzDwO/3O1Jf13V8Ph+a1qHTkk9xct2c9vqd
      qv3c+wCd+qNrmuZYB3K6/mFtp+s75TTX71RtOQokXE0CIFxNAiBcrUUALB7O3eVXv/o1m/ny
      0bZIiCPUcid4YPQSA6ks6YMaw0n70ufPnjLo5G0ETt2SoJR68nKK07dTSH1na7cIgIdmOcf2
      vmJy/HeHO03TfPLVMIwXXvhhLaeOFCilsCyrY219mmmaKKUca7+T6+a01+9U7RYBaHD73z6m
      u7cPf3eEkE9naHAQn89+u9fr7dixdaWUY8fpnT4PADh6HsDJdXPa63eqdosABPjad777wsWF
      OOlaBEDDwU9GIU4MOQwqXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0C
      IFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBc
      TQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFytZQCa1RI7ucJRtkWII9cyALuZLbZ2
      do+yLUIcuZbTpJ4dHaO0lP7c9wzDQCmFaZo0m82ONKCTtVrVd2qqTidrH9Z3et2c1vqdqt0i
      AIrDP+vhH1jTtM/NEhkIBF544QDNZrNjtZ52OIWpUzMV6rru6CyRTq6b016/U7VbBMBi/u4n
      ZMtNtK4IsS4YOjP4wgsT4qRpEQAvV157iytH2xYhjpwcBhWuJgEQriYBEK4mARCuJgEQriYB
      EK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCu
      JgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQrtYy
      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
    </thumbnail>
  </thumbnails>
</workbook>
